/*인덱스 정리
책의 찾아보기 개념과 비슷하다
데이터를 좀 더 빠르게 찾을 수 있도록 해주는 도구이다
	목차나 색인 없으면 처음부터 끝까지 찾아야함,여러번 나올수도 있으므로
    
장단점
	장점
		검색속도가 무척 빨라질수있음(항상 그런건 아니다)
        쿼리 부하 줄어들어 시스템 전체의 성능향상
        
	단점
		인덱스가 DB공간 차지해서 추가적인 공간 필요
			대략 데이터베이스 크기의 10%정도의 추가공간 필요
		처음 인덱스 생성하는데 시간 소요
        데이터 변경작업이 자주 일어나는 경우 성능이 나빠질수있음
        
종류
	클러스터형 인덱스
		영어사전과 같은 책
		테이블 당 한 개만 지정가능
		행 데이터를 인덱스로 지정한 열에 맞춰 자동 정렬
        
	보조 인덱스
		책 뒤에 찾아보기 가 있는 일반 책
        키워드와 페이지번호가 나와있는 상
        테이블 당 여러개도 생성가능
        
자동으로 생성되는 인덱스
	PRIMARY KEY 지정시 자동으로 클러스터링 인덱스 생성
    또는 UNIQUE 사용하면 됨
    클러스터형 인덱스가 비었다고 UNIQUE가 클러스터형으로 지정되는것은 아니다
    UNIQUE에 클러스터형 인덱스 지정, UNIQUE에 NOT NULL이 포함되면 클러스터형 인덱스 지정
    UNIQUE에 NOT NULL과 PRIMARY KEY를 모두 지정하면 PRIMARY KEY가 우선된다
    
인덱스의 특징
	PRIMARY KEY로 지정된 열은 클러스터형 인덱스 생성
    UNIQUE NOT NULL 로 지정한 열은 클러스터형 인덱스 생성
    UNIQUE (또는 UNIQUE NULL)로 지정한 열은 보조 인덱스 생성
    PRIMARY KEY와 UNIQUE NOT NULL이 존재
    PRIMARY KEY와 UNIQUE NOT NULL이 있으면 PRIMARY KEY에 지정한 열에 우선 클러스터형 인덱스 생성
    PRIMARY KEY로 지정한 열로 데이터가 오름차순 정렬
    
제약조건 설정시 주의점
	테이블 생성시에 인덱스 설정하면 시간이 오래 걸리지 않으나
    대량의 데이터가 입력되고 난후에 인덱스 추가하게되면 시간이 오래걸린다
    ALTER TABLE 로 PRIMARY KEY나 UNIQUE 를 지정할때 주의점
    
B-TREE(BALANCED TREE,균형트리)
	자료 구조에 나오는 범용적으로 사용되는 데이터구조
    인덱스 표현할 때와 그 외에도 많이 사용
    
페이지 분할
	인덱스 구성시 SELECT 문의 효율성 향상
    인덱스 구성시 INSERT 문이 일어날 경우 속도 저하되는 단점 존재
		주어진 공간 이상으로 데이터 들어가면 페이지 분할 일어남
        
	인덱스 없는 테이블은 입력된 순서대로 기록이 된다
    클러스터형 인덱스 구성한 테이블(예를 들면 PRIMARY KEY로 지정한 클러스터형 인덱스는)
    PRIMARY KEY로 지정한 열로 데이터가 오름차순 정렬된다
    

클러스터형 인덱스의 특징
	클러스터형 인덱스 생성 시 데이터 페이지 전체 다시 정렬
		이미 대용량 데이터 입력된 상태라면 업무시간에 생성하는건 심각한 시스템 부하
        
	인덱스 자체의 리프 페이지가 곧 데이터
		인덱스 자체에 데이터가 포함되어있음
	
    클러스터형 인덱스는 보조 인덱스 보다 검색 속도는 더 빠르다
		데이터 입력/수정/삭제는 더 느리다
        
	클러스터형 인덱스는 성능이 좋지만 테이블에 한 개만 생성 가능
		어느 열에 클러스터형 인덱스 생성하는지에 따라 시스템 성능이 달라진다
        
보조 인덱스 특징
	보조 인덱스 생성시 별도의 페이지에 인덱스 구성
	
    인덱스 자체의 리프 페이지는 데이터가 아니고 데이터가 위치하는 주소 값(RID)
     
	클러스터형보다 검색 속도는 더 느리다
		데이터 입력/수정/삭제는 덜 느리다
        
	보조 인덱스는 여러 개 생성할 수 있다
		남용할 경우에는 시스템 성능을 떨어뜨리는 결과를 발생시킨다
        
	




















    
    





